@page "/User"
@page "/User/{Id:int}"

@using Ecommerce.DTO;
@using Ecommerce.WebAssembly;
@using Ecommerce.WebAssembly.Services.Interfaces;
@inject IUserService userService;

@inject NavigationManager navigationManager;
@inject SweetAlertService sweetAlertService;

<div class="row justify-content-center  mt-3">
    <p class="col-sm-12 col-md-8 col-xl-10 h4 mt-2">@Title</p>
</div>
<div class="row justify-content-center  mt-3">
    <div class="col-sm-12 col-md-8 col-xl-10">
        <EditForm Model="user" OnValidSubmit="saveChanges">
            <DataAnnotationsValidator></DataAnnotationsValidator>

            <div class="input-group">
                <span class="input-group-text bg-light" id="basic-addon3">Nombre Completo</span>
                <input type="text" class="form-control" @bind-value="user.Name">
            </div>
            <ValidationMessage For="@(()=>user.Name)" />

            <div class="input-group mt-3">
                <span class="input-group-text bg-light" id="basic-addon3">Correo</span>
                <input type="text" class="form-control" @bind-value="user.Email"><br />
            </div>
            <ValidationMessage For="@(()=>user.Email)" />

            <div class="input-group mt-3">
                <span class="input-group-text bg-light" id="basic-addon3">Contraseña</span>
                <input type="password" class="form-control" @bind-value="user.Password">
            </div>
            <ValidationMessage For="@(()=>user.Password)" />

            <div class="input-group mt-3">
                <span class="input-group-text bg-light" id="basic-addon3">Confirmar Contraseña</span>
                <input type="password" class="form-control" @bind-value="user.ConfirmPassword">
            </div>
            <ValidationMessage For="@(()=>user.ConfirmPassword)" />

            <div class="mt-3">
                <button type="submit" class="btn btn-primary" style="width:130px">@Button</button>
                <a href="/Users" class="btn btn-secondary" style="width:130px">Volver</a>
            </div>
        </EditForm>


    </div>

</div>



@code {
    [Parameter] public int Id { get; set; }

    private string Title = "Nuevo Usuario";
    private string Button = "Crear";
    private UserDTO user = new UserDTO();


    protected override async Task OnParametersSetAsync()
    {
        if(Id != 0)
        {
            Title = "Editar Usuario";
            Button = "Actualizar";

            var response = await userService.Get(Id);
            if (response.ItsRight)
            {
                user = (UserDTO)response.Result!;
                user.ConfirmPassword = user.Password;
            }
            else
            {
              
            }
        }

    }


    private async Task saveChanges()
    {
        if(user.Password != user.ConfirmPassword)
        {
           
            return;
        }

        bool responseAction = true;
        string message = "";

        if(Id != 0)
        {
            var response = await userService.Update(user);
            if (response.ItsRight)
            {
                message = "Usuario ha sido modificado";
            }
            else
            {
                responseAction = false;
                message = "No se pudo editar";
            }
        }
        else
        {
            user.Rol = "admin";
            var response = await userService.Create(user);
            if (response.ItsRight)
            {
                message = "Usuario ha sido creado";
            }
            else
            {
                responseAction = false;
                message = "No se pudo crear";
            }

        }

        if (responseAction)
        {
            
            navigationManager.NavigateTo("/Users");
        }
        
           
        
    }




}
