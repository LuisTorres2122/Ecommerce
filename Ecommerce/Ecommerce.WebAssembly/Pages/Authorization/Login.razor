@page "/login"
@layout LoginLayout

@using Ecommerce.DTO;
@using Ecommerce.WebAssembly.Extensions;
@using Ecommerce.WebAssembly.Services.Interfaces;
@using Microsoft.AspNetCore.Components.Authorization;


@inject NavigationManager navigationManager;
@inject IUserService userService;
@inject AuthenticationStateProvider authenticationProvider;

<div class="container">
    <div class="row justify-content-center">
        <div class="col-lg-5">
            <div class="card rounded-lg mt-5">
                <div class="card-header"><h3 class="text-center font-weight-light my-4">Login</h3></div>
                <div class="card-body">
                    <EditForm Model="ModelLogin" OnValidSubmit="LogIn">
                        <DataAnnotationsValidator></DataAnnotationsValidator>
                        <div class="form-floating mb-3">
                            <input class="form-control" id="inputEmail" type="email" placeholder="admin@example.com" @bind-value="ModelLogin.Email" autocomplete="off" />
                            <label for="inputEmail">Correo</label>
                            <ValidationMessage For="@(()=>ModelLogin.Email)" />
                        </div>
                        <div class="form-floating mb-3">
                            <input class="form-control" id="inputPassword" type="password" placeholder="123" @bind-value="ModelLogin.Password" autocomplete="off" />
                            <label for="inputPassword">Contraseña</label>
                            <ValidationMessage For="@(()=>ModelLogin.Password)" />
                        </div>

                        <div class="d-grid gap-1 mt-4 mb-0">
                            <button class="btn btn-primary" type="submit">Ingresar</button>
                        </div>
                    </EditForm>
                </div>
                <div class="card-footer text-center py-3">
                    <div class="small"><a href="/Register">No tienes una cuenta? Registrate!</a></div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private LoginDTO ModelLogin = new LoginDTO();


    private async Task LogIn()
    {
        var response = await userService.Authorization(ModelLogin);
        if (response.ItsRight)
        {
            SessionDTO session = (SessionDTO)response.Result!;

            var auth = (AutenticationExtension) authenticationProvider;
            await auth.UpdateAutenticationState(session);


            if (session.Rol.ToLower() == "admin")
            {
                navigationManager.NavigateTo("/DashBoard");
            }
            else
            {
                navigationManager.NavigateTo("/Catalog");
            }
        }
        else
        {
            Console.WriteLine("Error");
        }

    }
}
