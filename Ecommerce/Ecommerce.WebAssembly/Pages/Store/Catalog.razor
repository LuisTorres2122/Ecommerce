@page "/"
@page "/Catalog"

@using Ecommerce.DTO;
@using Ecommerce.WebAssembly.Services.Interfaces;

@inject IProducService productService;
@inject ICategoryService categoryService;

<div class="row justify-content-center mt-3 mb-4">

    <div class="col-sm-6 col-md-8 col-xl-9">
        <div class="input-group mb-3">
            <input type="text" class="form-control" placeholder="Buscar producto..." @bind-value="browse">
            <button class="btn btn-outline-secondary" type="button" @onclick="(async () => await  GetCatalog())">
                <i class="oi oi-magnifying-glass"></i>
            </button>
        </div>
    </div>
</div>



<div class="row">
    <div class="col-sm-3">


        <div class="card">
            <div class="card-header text-white bg-dark">
                Categorias
            </div>
            <div class="card-body">
                @if (categoryList != null)
                {
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="categoria" id="Todos" value="All" 
                        @onchange="RadioSelection"
                               checked=@(selectedCategory.Equals("All", StringComparison.OrdinalIgnoreCase))>
                        <label class="form-check-label" for="Todos">
                            Todos
                        </label>
                    </div>
                    @foreach(var item in categoryList)
                    {
                     <div class="form-check">
                         <input class="form-check-input" type="radio" name="categoria" id="@item.Id" value="@item.Name"
                                @onchange="RadioSelection"
                                checked=@(selectedCategory.Equals(@item.Name, StringComparison.OrdinalIgnoreCase))>
                         <label class="form-check-label" for="@item.Id">
                                @item.Name
                         </label>
                     </div>
                    }
                    
                }
                else
                {
                    <div class="spinner-border" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                }
            </div>

        </div>
       

    </div>

    <div class="col-sm-9">
        <div class="row gx-4 row-cols-1 row-cols-md-3 row-cols-xl-4 justify-content-start">
            @if (productList != null)
            {
                @foreach(var item in productList)
                { 
                <div class="col mb-5">
                    <div class="card h-100">
                        <!-- Sale badge-->

                        <div class="badge bg-primary text-white position-absolute" style="top: 0.5rem; right: 0.5rem">Nuevo</div>

                        <!-- Product image-->
                        <img class="card-img-top border-dark border-1" src="@item.Image" style="width:100%;height:250px">
                        <!-- Product details-->
                        <div class="card-body p-4">
                            <div class="text-center">
                                <!-- Product name-->
                                <h5 class="fw-bolder">@item.Name</h5>
                                <!-- Product price-->

                                <span class="text-danger text-decoration-line-through">S/. @item.Price</span>
                                <span>S /.@item.OfferPrice</span>

                                <span>S /.@item.Price</span>
                            </div>
                        </div>
                        <!-- Product actions-->
                        <div class="card-footer p-3 pt-0 border-top-0 bg-transparent">
                                <div class="text-center"><a class="btn btn-outline-dark mt-auto" href="/Detail/@item.Id">Ver producto</a></div>
                        </div>
                    </div>
                </div>
                }
            }
            else
            {
                <div class="spinner-border" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            }
        </div>
    </div>
</div>


@code {
    private List<ProductDTO> productList = new List<ProductDTO>();
    private string browse = "";
    private List<CategotyDTO> categoryList = new List<CategotyDTO>();
    private string selectedCategory = "All";



    protected override async Task OnInitializedAsync()
    {
        await GetCatalog();
        await GetCategory(); 
        
    }

    private async Task GetCategory()
    {
        var response = await categoryService.CategoryList("");
        if (response.ItsRight)
        {
            categoryList = (List<CategotyDTO>)response.Result!;
        }
    }

    private async Task GetCatalog()
    {
        var response = await productService.Catalog(selectedCategory,browse);
        if (response.ItsRight)
        {
            productList = (List<ProductDTO>)response.Result!;
        }

    }

    private async Task RadioSelection(ChangeEventArgs args)
    {
        selectedCategory = args.Value.ToString();
        browse = "";
        await GetCatalog();
    }

}
